{
  "success": true,
  "data": {
    "id": 36867,
    "name": "<p>请说明缓存击穿和缓存穿透的区别</p>",
    "options": null,
    "answer": "<p>缓存击穿和缓存穿透都是在使用缓存系统时可能遇到的问题，但它们有着明显的区别：</p>\n<h3>定义</h3>\n<ul>\n  <li><strong>缓存击穿</strong>：指的是一个非常热门的key在缓存中过期失效的瞬间，大量的请求同时涌入，这些请求都会直接穿透缓存去访问数据库。因为这个key访问量极大，所以在其缓存过期的短暂时间内，数据库会承受巨大的压力，可能导致数据库崩溃。</li>\n  <li><strong>缓存穿透</strong>：是指客户端请求的数据在缓存和数据库中都不存在，这样每次请求都会穿过缓存直接访问数据库。恶意攻击者可能会利用这一点，故意大量请求不存在的数据，对数据库造成压力，甚至拖垮数据库。</li>\n</ul>\n<h3>产生原因</h3>\n<ul>\n  <li><strong>缓存击穿</strong>：主要是由于热门数据的缓存过期策略设置不合理，或者缓存服务器出现故障导致热门key的缓存丢失。例如，某电商平台在促销活动期间，一款热门商品的缓存过期时间设置过短，活动期间该商品的缓存过期后，大量用户的请求就会直接打到数据库上。</li>\n  <li><strong>缓存穿透</strong>：可能是由于业务数据本身存在不完整性，部分数据在数据库中确实不存在；也可能是受到恶意攻击，攻击者通过构造不存在的key来发起请求。比如，在一个用户信息系统中，攻击者可能会使用一些随机生成的、不存在的用户ID来发起请求。</li>\n</ul>\n<h3>解决方案</h3>\n<ul>\n  <li><strong>缓存击穿</strong>：\n    <ul>\n      <li><strong>设置热点数据永不过期</strong>：对于一些非常热门的数据，可以将其缓存设置为永不过期，或者在临近过期时，通过后台线程主动更新缓存。</li>\n      <li><strong>加互斥锁</strong>：当发现缓存失效时，先获取一个互斥锁，只有获取到锁的线程才能去访问数据库并更新缓存，其他线程等待缓存更新完成后再从缓存中获取数据。</li>\n    </ul>\n  </li>\n  <li><strong>缓存穿透</strong>：\n    <ul>\n      <li><strong>布隆过滤器</strong>：在请求到达缓存之前，先通过布隆过滤器进行过滤。布隆过滤器可以快速判断一个key是否可能存在于数据库中，如果判断结果为不存在，则直接返回，避免请求到达数据库。</li>\n      <li><strong>缓存空值</strong>：当数据库中查询不到数据时，也将该key对应的空值存入缓存中，并设置一个较短的过期时间，这样后续相同的请求就可以直接从缓存中获取空值，而不会再次访问数据库。</li>\n    </ul>\n  </li>\n</ul>",
    "type": 6,
    "level": 1,
    "freq": 0.003461206,
    "analysis": "<h3>1. 题目核心</h3>\n<ul>\n  <li><strong>问题</strong>：说明缓存击穿和缓存穿透的区别。</li>\n  <li><strong>考察点</strong>：对Redis缓存击穿和缓存穿透概念、产生原因、影响及解决方案的理解。</li>\n</ul>\n<h3>2. 背景知识</h3>\n<h4>（1）Redis缓存基本原理</h4>\n<p>Redis是一种高性能的内存数据库，常被用作缓存。应用程序在访问数据时，先从Redis缓存中查找，如果缓存中有则直接使用，若没有则从数据库中获取，并将数据存入缓存。</p>\n<h4>（2）缓存的作用</h4>\n<p>减少数据库的访问压力，提高系统的响应速度和性能。</p>\n<h3>3. 解析</h3>\n<h4>（1）缓存击穿</h4>\n<ul>\n  <li><strong>定义</strong>：指一个热点key在缓存中过期失效的瞬间，大量请求同时访问该key，这些请求会直接穿透缓存访问数据库。</li>\n  <li><strong>产生原因</strong>：热点key的过期时间设置不合理，或者在高并发场景下，大量请求集中在该热点key上，当key过期时就会出现大量请求直接访问数据库。</li>\n  <li><strong>影响</strong>：会给数据库带来巨大的访问压力，可能导致数据库崩溃，影响系统的稳定性。</li>\n  <li><strong>解决方案</strong>：可以设置热点key永不过期，或者使用互斥锁，当缓存失效时，只有一个请求能去数据库加载数据并更新缓存，其他请求等待。</li>\n</ul>\n<h4>（2）缓存穿透</h4>\n<ul>\n  <li><strong>定义</strong>：指客户端请求的数据在缓存和数据库中都不存在，这样每次请求都会穿透缓存直接访问数据库。</li>\n  <li><strong>产生原因</strong>：可能是恶意攻击，故意请求不存在的数据；也可能是业务代码逻辑错误，导致请求了不存在的数据。</li>\n  <li><strong>影响</strong>：会使数据库承受大量无效请求，增加数据库的负担，甚至可能导致数据库性能下降或崩溃。</li>\n  <li><strong>解决方案</strong>：可以在缓存中存储空值，当请求不存在的数据时，在缓存中记录该key为空，下次请求直接从缓存返回；也可以使用布隆过滤器，在请求到达缓存之前进行过滤，判断请求的数据是否可能存在。</li>\n</ul>\n<h4>（3）两者区别</h4>\n<ul>\n  <li><strong>针对对象</strong>：缓存击穿针对的是热点key，而缓存穿透针对的是不存在的数据。</li>\n  <li><strong>产生场景</strong>：缓存击穿是在热点key过期时发生，缓存穿透是在请求不存在的数据时发生。</li>\n  <li><strong>解决思路</strong>：缓存击穿主要通过设置永不过期或使用互斥锁来解决，缓存穿透主要通过存储空值或使用布隆过滤器来解决。</li>\n</ul>\n<h3>4. 示例场景</h3>\n<h4>（1）缓存击穿</h4>\n<p>某电商平台的热门商品信息作为热点key存储在Redis中，设置了过期时间。在过期的瞬间，大量用户同时访问该商品信息，这些请求就会直接访问数据库。</p>\n<h4>（2）缓存穿透</h4>\n<p>恶意攻击者不断发送请求，请求一些不存在的商品ID，这些请求会穿透缓存直接访问数据库。</p>\n<h3>5. 常见误区</h3>\n<h4>（1）概念混淆</h4>\n<ul>\n  <li>误区：将缓存击穿和缓存穿透的概念混淆，不能准确区分两者。</li>\n  <li>纠正：明确两者的定义、产生原因和场景，通过对比加深理解。</li>\n</ul>\n<h4>（2）解决方案错误应用</h4>\n<ul>\n  <li>误区：将缓存击穿的解决方案用于缓存穿透问题，或者反之。</li>\n  <li>纠正：根据具体问题选择合适的解决方案，理解不同方案针对的问题。</li>\n</ul>\n<h3>6. 总结回答</h3>\n<p>缓存击穿和缓存穿透是Redis使用中不同的问题。缓存击穿是指热点key在缓存中过期失效时，大量请求直接穿透缓存访问数据库，通常是由于热点key过期时间设置不当或高并发场景下集中访问导致，会给数据库带来巨大压力。可通过设置热点key永不过期或使用互斥锁解决。</p>\n<p>而缓存穿透是指客户端请求的数据在缓存和数据库中都不存在，每次请求都直接访问数据库，可能是恶意攻击或业务逻辑错误造成，会增加数据库负担。可通过在缓存中存储空值或使用布隆过滤器解决。两者的主要区别在于针对对象、产生场景和解决思路不同。</p>",
    "more_ask": "<ol>\n  <li>\n    <p>\n      如何解决缓存击穿问题，详细阐述每种解决方案的优缺点？\n      提示：可从热点数据永不过期、加互斥锁等方面思考，分析方案在性能、复杂度等方面的特点。\n    </p>\n  </li>\n  <li>\n    <p>\n      缓存穿透有哪些常见的攻击场景，如何防范这些攻击？\n      提示：考虑恶意用户利用不存在的 key 进行请求的情况，从布隆过滤器、接口层校验等角度思考防范方法。\n    </p>\n  </li>\n  <li>\n    <p>\n      当使用布隆过滤器解决缓存穿透时，可能会遇到什么问题，如何应对？\n      提示：布隆过滤器存在误判率，思考误判带来的影响以及降低误判率的方法。\n    </p>\n  </li>\n  <li>\n    <p>\n      缓存击穿和缓存穿透在高并发场景下会对系统造成怎样不同的影响？\n      提示：从系统资源占用、响应时间、服务可用性等方面分析两者的不同影响。\n    </p>\n  </li>\n  <li>\n    <p>\n      对于缓存击穿和缓存穿透问题，在不同业务场景下应如何选择合适的解决方案？\n      提示：结合业务的读写频率、数据更新频率、数据量大小等因素进行分析。\n    </p>\n  </li>\n</ol>",
    "mindmap": "mindmap\n  root((缓存击穿和缓存穿透的区别))\n    定义\n      缓存击穿\n        热门key缓存过期瞬间大量请求穿透缓存访问数据库\n        数据库承受巨大压力可能崩溃\n      缓存穿透\n        请求数据在缓存和数据库都不存在\n        恶意攻击可致数据库压力大甚至拖垮\n    产生原因\n      缓存击穿\n        热门数据缓存过期策略不合理\n        缓存服务器故障致热门key缓存丢失\n      缓存穿透\n        业务数据本身不完整\n        恶意攻击构造不存在的key请求\n    解决方案\n      缓存击穿\n        设置热点数据永不过期\n        加互斥锁\n      缓存穿透\n        布隆过滤器过滤\n        缓存空值",
    "keynote": "缓存击穿和穿透区别\n- 定义\n  - 缓存击穿：热门key过期瞬间大量请求穿透缓存访数据库，数据库压力大\n  - 缓存穿透：请求数据在缓存和数据库都无，恶意攻击可拖垮数据库\n- 原因\n  - 缓存击穿：过期策略不合理、缓存服务器故障\n  - 缓存穿透：业务数据不完整、恶意攻击\n- 方案\n  - 缓存击穿：热点数据永不过期、加互斥锁\n  - 缓存穿透：布隆过滤器、缓存空值",
    "group_id": 16,
    "kps": [
      "常见问题与解决方案"
    ],
    "years": [
      2025,
      2024
    ],
    "corps": [
      "美团",
      "汇丰银行",
      "拼多多",
      "七牛云",
      "字节跳动",
      "OPPO",
      "百度",
      "滴滴",
      "Momenta",
      "航旅纵横"
    ]
  }
}