{
  "success": true,
  "data": {
    "id": 48369,
    "name": "<p>MySQL的联合索引，范围查询、模糊查询一定失效吗</p>",
    "options": null,
    "answer": "<p>MySQL的联合索引在范围查询、模糊查询时不一定失效，下面分别进行分析：</p>\n<h3>范围查询</h3>\n<p>联合索引在范围查询时不一定失效，这取决于范围查询在联合索引中的位置。</p>\n<ul>\n  <li><strong>范围查询在联合索引的最右侧列</strong>：当范围查询条件作用于联合索引的最右侧列时，联合索引不会失效，并且可以正常使用索引进行查询优化。\n    <ul>\n      <li>示例：假设创建了联合索引 <code>idx_col1_col2 (col1, col2)</code>，执行如下查询：</li>\n    </ul>\n  </li>\n</ul>\n<pre><code class=\"language-sql\">SELECT * FROM table_name WHERE col1 = 'value1' AND col2 > 10;\n</code></pre>\n<pre><code>- 解释：在这个查询中，`col1` 使用了等值查询，`col2` 使用了范围查询。由于 `col2` 是联合索引的最右侧列，MySQL 可以先通过 `col1` 进行索引查找，然后在满足 `col1` 条件的结果集中对 `col2` 进行范围扫描，此时联合索引是有效的。\n</code></pre>\n<ul>\n  <li><strong>范围查询在联合索引的非最右侧列</strong>：如果范围查询条件作用于联合索引的非最右侧列，那么该列之后的索引列将无法使用索引，即出现索引截断。\n    <ul>\n      <li>示例：对于联合索引 <code>idx_col1_col2 (col1, col2)</code>，执行如下查询：</li>\n    </ul>\n  </li>\n</ul>\n<pre><code class=\"language-sql\">SELECT * FROM table_name WHERE col1 > 10 AND col2 = 'value2';\n</code></pre>\n<pre><code>- 解释：在这个查询中，`col1` 使用了范围查询，由于 `col1` 不是联合索引的最右侧列，MySQL 在对 `col1` 进行范围扫描后，无法再使用 `col2` 上的索引，`col2` 只能进行全表扫描。\n</code></pre>\n<h3>模糊查询</h3>\n<p>联合索引在模糊查询时也不一定失效，主要取决于模糊查询的写法。</p>\n<ul>\n  <li><strong>模糊查询以常量开头</strong>：当模糊查询的 <code>LIKE</code> 条件以常量开头时，联合索引可以部分使用。\n    <ul>\n      <li>示例：对于联合索引 <code>idx_col1_col2 (col1, col2)</code>，执行如下查询：</li>\n    </ul>\n  </li>\n</ul>\n<pre><code class=\"language-sql\">SELECT * FROM table_name WHERE col1 LIKE 'abc%' AND col2 = 'value2';\n</code></pre>\n<pre><code>- 解释：在这个查询中，`col1` 的模糊查询以常量 `abc` 开头，MySQL 可以使用联合索引先对 `col1` 进行前缀匹配，然后再对 `col2` 进行等值匹配，此时联合索引是有效的。\n</code></pre>\n<ul>\n  <li><strong>模糊查询以通配符开头</strong>：当模糊查询的 <code>LIKE</code> 条件以通配符 <code>%</code> 开头时，联合索引会失效。\n    <ul>\n      <li>示例：对于联合索引 <code>idx_col1_col2 (col1, col2)</code>，执行如下查询：</li>\n    </ul>\n  </li>\n</ul>\n<pre><code class=\"language-sql\">SELECT * FROM table_name WHERE col1 LIKE '%abc' AND col2 = 'value2';\n</code></pre>\n<pre><code>- 解释：在这个查询中，`col1` 的模糊查询以通配符 `%` 开头，MySQL 无法通过索引快速定位到符合条件的记录，只能进行全表扫描，此时联合索引失效。\n</code></pre>",
    "type": 6,
    "level": 2,
    "freq": 0.0004917629,
    "analysis": "<h3>1. 题目核心</h3>\n<ul>\n  <li><strong>问题</strong>：MySQL的联合索引在范围查询、模糊查询时是否一定失效。</li>\n  <li><strong>考察点</strong>：\n    <ul>\n      <li>对MySQL联合索引原理的理解。</li>\n      <li>范围查询和模糊查询的特点。</li>\n      <li>联合索引在不同查询场景下的使用规则。</li>\n    </ul>\n  </li>\n</ul>\n<h3>2. 背景知识</h3>\n<h4>（1）联合索引</h4>\n<p>联合索引是指在表的多个列上创建的索引，它可以提高多列条件查询的效率。MySQL使用B+树来存储索引，联合索引的键值是按照创建索引时列的顺序进行排序的。</p>\n<h4>（2）范围查询</h4>\n<p>范围查询是指使用比较运算符（如 >、&#x3C;、>=、&#x3C;=）对列的值进行范围限定的查询，例如 <code>WHERE column1 > 10</code>。</p>\n<h4>（3）模糊查询</h4>\n<p>模糊查询通常使用 <code>LIKE</code> 关键字，用于匹配字符串的部分内容，例如 <code>WHERE column1 LIKE '%abc%'</code>。</p>\n<h3>3. 解析</h3>\n<h4>（1）范围查询</h4>\n<ul>\n  <li><strong>不一定失效</strong>：在联合索引中，如果范围查询的列是索引的最右列，或者在范围查询列之前的索引列都被精确匹配，那么联合索引仍然可以部分生效。例如，对于联合索引 <code>(col1, col2, col3)</code>，当查询条件为 <code>WHERE col1 = 'value1' AND col2 = 'value2' AND col3 > 10</code> 时，<code>col1</code> 和 <code>col2</code> 可以使用索引进行精确匹配，<code>col3</code> 可以使用索引进行范围扫描。</li>\n  <li><strong>失效情况</strong>：如果范围查询的列不是最右列，并且在范围查询列之后还有其他索引列，那么范围查询列之后的索引列将无法使用索引。例如，对于联合索引 <code>(col1, col2, col3)</code>，当查询条件为 <code>WHERE col1 > 10 AND col2 = 'value2' AND col3 = 'value3'</code> 时，<code>col1</code> 进行范围查询后，<code>col2</code> 和 <code>col3</code> 无法使用索引。</li>\n</ul>\n<h4>（2）模糊查询</h4>\n<ul>\n  <li><strong>不一定失效</strong>：当模糊查询以常量开头时，例如 <code>WHERE col1 LIKE 'abc%'</code>，MySQL可以使用索引进行前缀匹配，联合索引仍然可以生效。</li>\n  <li><strong>失效情况</strong>：当模糊查询以通配符 <code>%</code> 开头时，例如 <code>WHERE col1 LIKE '%abc'</code> 或 <code>WHERE col1 LIKE '%abc%'</code>，MySQL无法使用索引进行匹配，联合索引会失效。</li>\n</ul>\n<h3>4. 示例代码</h3>\n<pre><code class=\"language-sql\">-- 创建表并添加联合索引\nCREATE TABLE test_table (\n    col1 INT,\n    col2 VARCHAR(50),\n    col3 INT,\n    PRIMARY KEY (col1),\n    INDEX idx_col1_col2_col3 (col1, col2, col3)\n);\n\n-- 范围查询示例\n-- 联合索引部分生效\nEXPLAIN SELECT * FROM test_table WHERE col1 = 1 AND col2 = 'abc' AND col3 > 10;\n-- 联合索引部分失效\nEXPLAIN SELECT * FROM test_table WHERE col1 > 1 AND col2 = 'abc' AND col3 = 10;\n\n-- 模糊查询示例\n-- 联合索引生效\nEXPLAIN SELECT * FROM test_table WHERE col2 LIKE 'abc%';\n-- 联合索引失效\nEXPLAIN SELECT * FROM test_table WHERE col2 LIKE '%abc';\n</code></pre>\n<h3>5. 常见误区</h3>\n<h4>（1）认为范围查询和模糊查询一定失效</h4>\n<ul>\n  <li>误区：认为只要是范围查询或模糊查询，联合索引就一定会失效。</li>\n  <li>纠正：需要根据具体的查询条件和联合索引的列顺序来判断索引是否生效。</li>\n</ul>\n<h4>（2）忽略联合索引的列顺序</h4>\n<ul>\n  <li>误区：在使用联合索引时，不考虑列的顺序，随意编写查询条件。</li>\n  <li>纠正：联合索引的列顺序非常重要，要遵循最左前缀原则，确保索引能够最大程度地发挥作用。</li>\n</ul>\n<h3>6. 总结回答</h3>\n<p>“在MySQL中，联合索引在范围查询、模糊查询时不一定失效。</p>\n<p>对于范围查询，如果范围查询的列是联合索引的最右列，或者在范围查询列之前的索引列都被精确匹配，联合索引可以部分生效；如果范围查询的列不是最右列，且之后还有其他索引列，那么范围查询列之后的索引列将无法使用索引。</p>\n<p>对于模糊查询，当模糊查询以常量开头时，联合索引可以生效；当模糊查询以通配符 <code>%</code> 开头时，联合索引会失效。</p>\n<p>在实际使用中，需要根据具体的查询条件和联合索引的列顺序来判断索引是否生效，同时要遵循最左前缀原则，以充分发挥联合索引的作用。”</p>",
    "more_ask": "<ol>\n  <li>\n    <p>\n      联合索引在范围查询和模糊查询中部分失效时，如何优化查询性能？\n      提示：从索引优化、SQL语句改写等方面思考。\n    </p>\n  </li>\n  <li>\n    <p>\n      对于联合索引 (col1, col2, col3)，当 col1 是范围查询，col2 是精确匹配，索引的使用情况是怎样的？\n      提示：结合联合索引的最左前缀原则分析。\n    </p>\n  </li>\n  <li>\n    <p>\n      模糊查询中，使用 LIKE '%xxx' 和 LIKE 'xxx%' 对联合索引的影响有何不同？\n      提示：考虑索引的匹配方式和扫描顺序。\n    </p>\n  </li>\n  <li>\n    <p>\n      如何通过 EXPLAIN 语句判断联合索引在范围查询和模糊查询中的使用情况？\n      提示：关注 EXPLAIN 结果中的 key、rows、Extra 等字段。\n    </p>\n  </li>\n  <li>\n    <p>\n      在高并发场景下，联合索引在范围查询和模糊查询时可能会遇到哪些问题，如何解决？\n      提示：从锁竞争、性能瓶颈等方面考虑。\n    </p>\n  </li>\n  <li>\n    <p>\n      当联合索引包含函数时，范围查询和模糊查询的索引使用情况会怎样变化？\n      提示：思考函数对索引的影响机制。\n    </p>\n  </li>\n  <li>\n    <p>\n      对于大表的联合索引，范围查询和模糊查询频繁时，是否需要定期重建索引？为什么？\n      提示：考虑索引碎片、统计信息等因素。\n    </p>\n  </li>\n  <li>\n    <p>\n      如何设计联合索引以尽量避免范围查询和模糊查询导致的索引失效问题？\n      提示：结合业务需求和查询特点设计索引。\n    </p>\n  </li>\n</ol>",
    "mindmap": "mindmap\n  root((MySQL联合索引在范围与模糊查询时情况分析))\n    范围查询\n      范围查询在联合索引最右侧列\n        联合索引有效\n        示例：idx_col1_col2 (col1, col2)，col1等值col2范围\n        解释：先col1索引查找，再col2范围扫描\n      范围查询在联合索引非最右侧列\n        出现索引截断\n        示例：idx_col1_col2 (col1, col2)，col1范围col2等值\n        解释：col1范围扫描后，col2全表扫描\n    模糊查询\n      模糊查询以常量开头\n        联合索引部分使用\n        示例：idx_col1_col2 (col1, col2)，col1常量开头模糊col2等值\n        解释：先col1前缀匹配，再col2等值匹配\n      模糊查询以通配符开头\n        联合索引失效\n        示例：idx_col1_col2 (col1, col2)，col1通配符开头模糊col2等值\n        解释：无法索引定位，全表扫描",
    "keynote": "范围查询：\n- 最右侧列：联合索引有效，先等值列索引查找，再范围列扫描\n- 非最右侧列：出现索引截断，范围列后全表扫描\n\n模糊查询：\n- 常量开头：联合索引部分使用，先前缀匹配，再等值匹配\n- 通配符开头：联合索引失效，全表扫描",
    "group_id": 13,
    "kps": [
      "索引与查询优化"
    ],
    "years": [
      2023,
      2022
    ],
    "corps": [
      "小鹅通",
      "字节跳动"
    ]
  }
}